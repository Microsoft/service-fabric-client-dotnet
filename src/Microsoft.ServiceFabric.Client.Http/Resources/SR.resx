<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorAADTokenHandlerIncorrectSecuritySettings" xml:space="preserve">
    <value>AADTokenHandler cannot be created for SecuritySettings of type {0}</value>
    <comment>Current SecuritySettingsType</comment>
  </data>
  <data name="ErrorCannotCallRefreshSecuritySettingsBeforeConfiguring" xml:space="preserve">
    <value>Cannot refresh security settings before configuring security.</value>
  </data>
  <data name="ErrorCannotChangeSecurityType" xml:space="preserve">
    <value>Cannot change security type when refreshing security settings.</value>
  </data>
  <data name="ErrorCannotConfigureSecurityAgain" xml:space="preserve">
    <value>Cannot configure security again, use RefreshSecuritySettings if intended to refresh settings.</value>
  </data>
  <data name="ErrorClaimsTokenHandlerIncorrectSecuritySettings" xml:space="preserve">
    <value>ClaimsTokenHandler cannot be created for SecuritySettings of type {0}</value>
    <comment>Current SecuritySettingsType</comment>
  </data>
  <data name="ErrorClientCredentialsInvalid" xml:space="preserve">
    <value>Authorization error, invalid client credentials.</value>
  </data>
  <data name="ErrorCollectionCannotBeEmpty" xml:space="preserve">
    <value>The provided collection cannot be empty.</value>
  </data>
  <data name="ErrorConnectionAlreadyOpened" xml:space="preserve">
    <value>The connection has already been opened.</value>
  </data>
  <data name="ErrorConnectionClosed" xml:space="preserve">
    <value>The connection has been closed or has not been opened.</value>
  </data>
  <data name="ErrorExpectedObjectOfTypeFormatString" xml:space="preserve">
    <value>Expected an object of type '{0}'.</value>
    <comment>ExpectedType</comment>
  </data>
  <data name="ErrorGenericParameterNotAnEnumFormatString" xml:space="preserve">
    <value>The generic parameter '{0}' is not an enum type.</value>
    <comment>EnumNameDescription</comment>
  </data>
  <data name="ErrorHttpOperationUnsuccessfulFormatString" xml:space="preserve">
    <value>The method '{0}' was unsuccessful: \n{1} - {2}\n{3}</value>
    <comment>Uri, StatusCode, ReasonPhrase, ResponseMessage</comment>
  </data>
  <data name="ErrorHttpRequestException" xml:space="preserve">
    <value>Error making Http request.</value>
  </data>
  <data name="ErrorIncorrectCredentialTypeForValidateCertificate" xml:space="preserve">
    <value>Certificate Validation callback is valid when server url is https.</value>
  </data>
  <data name="ErrorInvalidClientCredentialsRetryMessage" xml:space="preserve">
    <value>Invalid client client credentials, call will be retried with rereshed security settings.</value>
  </data>
  <data name="ErrorInvalidJsonInResponse" xml:space="preserve">
    <value>Json returned from server is invalid </value>
  </data>
  <data name="ErrorInvalidResourceUri" xml:space="preserve">
    <value>Invalid resource uri {0}</value>
  </data>
  <data name="ErrorNullDelegateHandler" xml:space="preserve">
    <value>Handlers specified in delegate handlers list cannot be null.</value>
  </data>
  <data name="ErrorNullResponse" xml:space="preserve">
    <value>Null response received from server for the request.</value>
  </data>
  <data name="ErrorPartitionKeyNotFoundFormatString" xml:space="preserve">
    <value>Unable to find the provided partition key '{0}' for service '{1}'</value>
    <comment>ServicePartitionKey, ServiceNameDescription</comment>
  </data>
  <data name="ErrorRemoteCertValidationFailureRetryMessage" xml:space="preserve">
    <value>Invalid client client certificate, call will be retried with rereshed security settings.</value>
  </data>
  <data name="ErrorRemoteServerCertValidation" xml:space="preserve">
    <value>The remote certificate is invalid according to the validation procedure.</value>
  </data>
  <data name="ErrorTimeoutOutOfRange" xml:space="preserve">
    <value>The server timeout must be greater than zero.</value>
  </data>
  <data name="ErrorUnableToBeginRequest" xml:space="preserve">
    <value>Unable to use the HTTP connection.</value>
  </data>
  <data name="ErrorUnableToFindEndpointForChosenRole" xml:space="preserve">
    <value>Unable to find endpoints for {0}. Please make the call to resolve service partition again.</value>
  </data>
  <data name="ErrorUnableToFindKindPropertyFormatString" xml:space="preserve">
    <value>Unable to find the '{0}' property on object "{1}".</value>
    <comment>PropertyNameDescription, TypeNameDescription</comment>
  </data>
  <data name="ErrorUnableToLookupKindFormatString" xml:space="preserve">
    <value>Unable to determine what kind of object is being deserialized. Kind value '{0}' not found.</value>
    <comment>EnumValue</comment>
  </data>
  <data name="ErrorUnableToLookUpListenerFormatString" xml:space="preserve">
    <value>Unable to look up listener named '{0}'</value>
    <comment>ListenerNameDescription</comment>
  </data>
  <data name="ErrorUrlScheme" xml:space="preserve">
    <value>Cluster http management endpoint url scheme doesn't match with SecuritySettings type. Url scheme is {0}, expected as per security settings is {1}.</value>
  </data>
  <data name="ServerErrorNoMeaningFulResponse" xml:space="preserve">
    <value>Server returned error while processing the request, but did not provide a meaningful error response. Response Error Code {0}</value>
  </data>
  <data name="ErrorCanNotDeserializeResponseFromServer" xml:space="preserve">
    <value>Failed to deserialize json response from server.</value>
  </data>
  <data name="ErrorMessageHTTP404" xml:space="preserve">
    <value>The requested resource does not exist on the server.</value>
  </data>
  <data name="ErrorMessageHTTP404" xml:space="preserve">
    <value>The requested resource/content/path does not exist on the server.</value>
  </data>
</root>